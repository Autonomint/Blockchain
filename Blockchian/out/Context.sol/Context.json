{"abi":[],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[\":@axelar-network/=node_modules/@axelar-network/\",\":@chainlink/=node_modules/@chainlink/\",\":@ensdomains/=node_modules/@ensdomains/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@layerzerolabs/=node_modules/@layerzerolabs/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/\",\":ds-test/ /= lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/ /= lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts/ /= @openzeppelin/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solidity-bytes-utils/=node_modules/solidity-bytes-utils/\"],\"viaIR\":true},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.20+commit.a1b79de6"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@axelar-network/=node_modules/@axelar-network/","@chainlink/=node_modules/@chainlink/","@ensdomains/=node_modules/@ensdomains/","@eth-optimism/=node_modules/@eth-optimism/","@layerzerolabs/=node_modules/@layerzerolabs/","@openzeppelin/=node_modules/@openzeppelin/","chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/","ds-test/ /= lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","eth-gas-reporter/=node_modules/eth-gas-reporter/","forge-std/ /= lib/forge-std/src/","hardhat-deploy/=node_modules/hardhat-deploy/","hardhat/=node_modules/hardhat/","openzeppelin-contracts/ /= @openzeppelin/","openzeppelin/=lib/openzeppelin-contracts/contracts/","solidity-bytes-utils/=node_modules/solidity-bytes-utils/"],"optimizer":{"enabled":true,"runs":100},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"node_modules/@openzeppelin/contracts/utils/Context.sol":"Context"},"libraries":{},"viaIR":true},"sources":{"node_modules/@openzeppelin/contracts/utils/Context.sol":{"keccak256":"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2","urls":["bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12","dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"node_modules/@openzeppelin/contracts/utils/Context.sol","id":70901,"exportedSymbols":{"Context":[70900]},"nodeType":"SourceUnit","src":"101:862:118","nodes":[{"id":70872,"nodeType":"PragmaDirective","src":"101:24:118","nodes":[],"literals":["solidity","^","0.8",".20"]},{"id":70900,"nodeType":"ContractDefinition","src":"624:338:118","nodes":[{"id":70882,"nodeType":"FunctionDefinition","src":"656:96:118","nodes":[],"body":{"id":70881,"nodeType":"Block","src":"718:34:118","nodes":[],"statements":[{"expression":{"expression":{"id":70878,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:118","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":70879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:118","memberName":"sender","nodeType":"MemberAccess","src":"735:10:118","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":70877,"id":70880,"nodeType":"Return","src":"728:17:118"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:118","parameters":{"id":70874,"nodeType":"ParameterList","parameters":[],"src":"675:2:118"},"returnParameters":{"id":70877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70876,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":70882,"src":"709:7:118","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70875,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:118","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:118"},"scope":70900,"stateMutability":"view","virtual":true,"visibility":"internal"},{"id":70891,"nodeType":"FunctionDefinition","src":"758:99:118","nodes":[],"body":{"id":70890,"nodeType":"Block","src":"825:32:118","nodes":[],"statements":[{"expression":{"expression":{"id":70887,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:118","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":70888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:118","memberName":"data","nodeType":"MemberAccess","src":"842:8:118","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":70886,"id":70889,"nodeType":"Return","src":"835:15:118"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:118","parameters":{"id":70883,"nodeType":"ParameterList","parameters":[],"src":"775:2:118"},"returnParameters":{"id":70886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70885,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":70891,"src":"809:14:118","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":70884,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:118","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:118"},"scope":70900,"stateMutability":"view","virtual":true,"visibility":"internal"},{"id":70899,"nodeType":"FunctionDefinition","src":"863:97:118","nodes":[],"body":{"id":70898,"nodeType":"Block","src":"935:25:118","nodes":[],"statements":[{"expression":{"hexValue":"30","id":70896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:118","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":70895,"id":70897,"nodeType":"Return","src":"945:8:118"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:118","parameters":{"id":70892,"nodeType":"ParameterList","parameters":[],"src":"892:2:118"},"returnParameters":{"id":70895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70894,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":70899,"src":"926:7:118","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":70893,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:118","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:118"},"scope":70900,"stateMutability":"view","virtual":true,"visibility":"internal"}],"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":70873,"nodeType":"StructuredDocumentation","src":"127:496:118","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"linearizedBaseContracts":[70900],"name":"Context","nameLocation":"642:7:118","scope":70901,"usedErrors":[],"usedEvents":[]}],"license":"MIT"},"id":118}